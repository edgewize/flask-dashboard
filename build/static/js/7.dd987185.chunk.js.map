{"version":3,"sources":["utils.js","components/Loader.js","views/Wave/LineChart.js","views/Wave/WaveSummary.js","views/Dashboard/SummaryGallery.js","views/Dashboard/Dashboard.js"],"names":["buildApiUrl","url","hexToRgbA","hex","alpha","c","test","substring","split","length","join","Error","Loader","this","props","isLoading","Fragment","children","Component","colors","require","chartColor","LineChart","timeSeries","data","discharge","labels","date","cfs","push","mainChart","datasets","label","backgroundColor","borderColor","mainChartOpts","tooltips","enabled","custom","CustomTooltips","legend","maintainAspectRatio","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","className","style","height","options","WaveSummary","state","query","period","freq","site_id","fetch_path","fetch","then","res","json","result","setState","getFlowData","prevProps","prevState","site_name","meta","Object","keys","siteName","TypeError","Card","CardHeader","Button","color","tag","Link","to","CardBody","SummaryGallery","Row","map","Col","md","key","Dashboard","href"],"mappings":"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","file":"static/js/7.dd987185.chunk.js","sourcesContent":["export const buildApiUrl = (url) => {\n  let api_target =\n    process.env.NODE_ENV === \"development\" ? \"http://127.0.0.1:9999\" : \"\";\n  return api_target + url;\n};\n\nexport function range(start, end) {\n  var ans = [];\n  for (let i = start; i <= end; i++) {\n    ans.push(i);\n  }\n  return ans;\n}\n\n\nexport function hexToRgbA(hex, alpha){\n  var c;\n  if(/^#([A-Fa-f0-9]{3}){1,2}$/.test(hex)){\n      c= hex.substring(1).split('');\n      if(c.length === 3){\n          c= [c[0], c[0], c[1], c[1], c[2], c[2]];\n      }\n      c= '0x'+c.join('');\n      return 'rgba('+[(c>>16)&255, (c>>8)&255, c&255].join(',')+', '+ alpha + ')';\n  }\n  throw new Error('Bad Hex');\n}","import React, { Component } from \"react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass Loader extends Component {\n  render() {\n      if (this.props.isLoading) {\n        return (<div>Loading...</div>)\n      } else {\n        return (<React.Fragment>{this.props.children}</React.Fragment>)\n      }\n  }\n}\n\nexport default Loader;\n","import React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { CustomTooltips } from \"@coreui/coreui-plugin-chartjs-custom-tooltips\";\nimport {hexToRgbA} from \"../../utils.js\";\nconst colors = require('../../assets/colors.json');\n\nconst chartColor = hexToRgbA(colors['cyan'], .8)\n\nclass LineChart extends Component {\n  render() {\n\n    let timeSeries = this.props.data.timeSeries.discharge;\n\n    let labels = [];\n    let data = [];\n\n    for (var date in timeSeries) {\n      let cfs = timeSeries[date]; \n      data.push(cfs);\n      labels.push(date);\n    };\n\n    let dset = {\n      label: \"Cubic Feet Per Second\",\n      backgroundColor: \"transparent\",\n      borderColor: chartColor,\n      data: data\n    };\n\n    let mainChart = {\n      labels: labels,\n      datasets: [dset]\n    };\n\n    const mainChartOpts = {\n      tooltips: {\n        enabled: false,\n        custom: CustomTooltips\n      },\n      legend: false,\n      maintainAspectRatio: false,\n      elements: {\n        line: {\n          borderWidth: 3\n        },\n        point: {\n          radius: 4,\n          hitRadius: 10,\n          hoverRadius: 4\n        }\n      }\n    };\n    return (\n      <div\n        className=\"chart-wrapper\"\n        style={{ height: this.props.height + \"px\"}}\n      >\n        <Line data={mainChart} options={mainChartOpts} height={this.props.height} />\n      </div>\n    );\n  }\n}\n\nexport default LineChart;\n","import React, { Component } from \"react\";\nimport { Button, Card, CardBody, CardTitle, CardHeader } from \"reactstrap\";\nimport { buildApiUrl } from \"../../utils\";\nimport LineChart from \"./LineChart\";\nimport Loader from \"../../components/Loader\";\nimport { Link } from \"react-router-dom\";\n\nclass WaveSummary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      query: {\n        period: \"P7D\",\n        freq: \"D\",\n      },\n      data: null,\n    };\n  }\n\n  getFlowData() {\n    let site_id = this.props.site_id;\n    let fetch_path =\n      buildApiUrl(\"/api/flow/\" + site_id) +\n      \"?period=\" +\n      this.state.query.period +\n      \"&freq=\" +\n      this.state.query.freq;\n    fetch(fetch_path)\n      .then((res) => res.json())\n      .then((result) => {\n        this.setState({\n          isLoading: false,\n          data: result,\n        });\n      });\n  }\n\n  componentDidMount() {\n    this.getFlowData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.getFlowData();\n    }\n  }\n\n  render() {\n    let site_name = null;\n    try {\n      let meta = this.state.data.meta;\n      site_name = meta[Object.keys(meta)[0]].siteName;\n    } catch (TypeError) {\n      site_name = null;\n    }\n    return (\n      <Card>\n        <Loader isLoading={this.state.isLoading}>\n          {!this.state.isLoading && (\n            <React.Fragment>\n               <CardHeader>\n                  <span className={\"h4 mb-0\"}>{site_name}</span>\n                  <div className=\"card-header-actions\">\n                  <Button\n                    color=\"link\"\n                    tag={Link}\n                    to={\"/wave/\" + this.props.site_id}\n                  >\n                  <i className=\"fa fa-plus fa-sm mb-0 float-right\"></i>\n\n                  </Button>\n                </div>\n              </CardHeader>\n               <CardBody>\n                <div>\n                  {this.state.data && (\n                    <LineChart data={this.state.data} height={200} />\n                  )}\n                </div>\n                <label className={\"text-center d-block mt-2 mb-0\"}></label>\n              </CardBody>\n            </React.Fragment>\n          )}\n        </Loader>\n      </Card>\n    );\n  }\n}\n\nexport default WaveSummary;\n","import React, { Component } from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport WaveSummary from \"../Wave/WaveSummary\";\n\nclass SummaryGallery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [13206000, 13247500, 13337000, 13246000],\n    };\n  }\n  render() {\n    return (\n      <Row>\n        {this.state.data.map((site_id) => (\n          <Col md=\"6\">\n            <WaveSummary key={site_id} site_id={site_id} />\n          </Col>\n        ))}\n      </Row>\n    );\n  }\n}\n\nexport default SummaryGallery;\n","import React, { Component } from \"react\";\nimport { Col, Row, Card, CardBody } from \"reactstrap\";\nimport SummaryGallery from \"./SummaryGallery\";\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col>\n            <Card>\n              <CardBody>\n                <h1>Idaho Surf Report</h1>\n                <p>\n                  Track river flow trends for Idaho surf waves. Project made\n                  possible by information from the{\" \"}\n                  <a href=\"https://waterdata.usgs.gov/nwis\">\n                    US Geological survey\n                  </a>{\" \"}\n                  and <a href=\"http://riverbreak.com/\">Riverbreak Magazine</a>\n                </p>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <SummaryGallery />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"],"sourceRoot":""}