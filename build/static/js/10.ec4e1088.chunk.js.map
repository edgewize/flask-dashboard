{"version":3,"sources":["routes.js","containers/DefaultLayout/DefaultLayout.js"],"names":["routes","path","exact","name","component","React","lazy","DefaultAside","DefaultFooter","nav","items","title","wrapper","element","attributes","class","url","icon","children","DefaultLayout","loading","className","fixed","display","navConfig","this","props","router","Container","fluid","fallback","map","route","idx","key","render","Component"],"mappings":"iPAaeA,EANA,CACb,CAAEC,KAAM,IAAKC,OAAO,EAAMC,KAAM,OAAQC,UANxBC,IAAMC,MAAK,kBAAM,wDAOjC,CAAEL,KAAM,iBAAkBE,KAAM,OAAQC,UAN7BC,IAAMC,MAAK,kBAAM,wDAO5B,CAAEL,KAAM,mBAAoBE,KAAM,QAASC,UAN/BC,IAAMC,MAAK,kBAAM,mCCgBzBC,EAAeF,IAAMC,MAAK,kBAAM,iCAChCE,EAAgBH,IAAMC,MAAK,kBAAM,iCAEjCG,EAAM,CACVC,MAAO,CACL,CACEC,OAAO,EACPR,KAAM,oBACNS,QAAS,CACPC,QAAS,GACTC,WAAY,IAEdC,MAAO,IAET,CACEZ,KAAM,OACNa,IAAK,IACLC,KAAM,aAER,CACEd,KAAM,QACNc,KAAM,aACNC,SAAU,CACR,CACEf,KAAM,QACNa,IAAK,iBACLC,KAAM,cAER,CACEd,KAAM,UACNa,IAAK,iBACLC,KAAM,cAER,CACEd,KAAM,SACNa,IAAK,iBACLC,KAAM,cAER,CACEd,KAAM,YACNa,IAAK,iBACLC,KAAM,gBAIZ,CACEd,KAAM,SACNa,IAAK,aACLC,KAAM,oBAKNE,E,4MACJC,QAAU,kBACR,yBAAKC,UAAU,oCAAf,e,uDAIA,OACE,yBAAKA,UAAU,OACb,yBAAKA,UAAU,aACb,kBAAC,IAAD,CAAYC,OAAK,EAACC,QAAQ,MACxB,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,WAAD,KACE,kBAAC,IAAD,eAAeC,UAAWf,GAASgB,KAAKC,MAAxC,CAA+CC,OAAQA,MAEzD,kBAAC,IAAD,MACA,kBAAC,IAAD,OAEF,0BAAMN,UAAU,aACd,kBAACO,EAAA,EAAD,CAAWC,OAAK,GACd,kBAAC,WAAD,CAAUC,SAAUL,KAAKL,WACvB,kBAAC,IAAD,KACGpB,EAAO+B,KAAI,SAACC,EAAOC,GAClB,OAAOD,EAAM5B,UACX,kBAAC,IAAD,CACE8B,IAAKD,EACLhC,KAAM+B,EAAM/B,KACZC,MAAO8B,EAAM9B,MACbC,KAAM6B,EAAM7B,KACZgC,OAAQ,SAACT,GAAD,OAAW,kBAACM,EAAM5B,UAAcsB,MAExC,YAMd,kBAAC,IAAD,CAAUJ,OAAK,GACb,kBAAC,WAAD,CAAUQ,SAAUL,KAAKL,WACvB,kBAACb,EAAD,SAIN,kBAAC,IAAD,KACE,kBAAC,WAAD,CAAUuB,SAAUL,KAAKL,WACvB,kBAACZ,EAAD,a,GA7CgB4B,aAqDbjB","file":"static/js/10.ec4e1088.chunk.js","sourcesContent":["import React from 'react';\n\nconst Dashboard = React.lazy(() => import('./views/Dashboard/Dashboard'));\nconst Wave = React.lazy(() => import('./views/Wave/Wave'));\nconst Sites = React.lazy(() => import('./views/Sites/Sites'));\n\n// https://github.com/ReactTraining/react-router/tree/master/packages/react-router-config\nconst routes = [\n  { path: '/', exact: true, name: 'Home', component: Dashboard },\n  { path: '/wave/:site_id', name: 'Wave', component: Wave },\n  { path: '/sites/:state_cd', name: 'Sites', component: Sites },\n];\n\nexport default routes;\n","import React, { Component, Suspense } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Container } from \"reactstrap\";\nimport * as router from \"react-router-dom\";\n\nimport {\n  AppAside,\n  // AppHeader,\n  AppFooter,\n  AppSidebar,\n  AppSidebarFooter,\n  AppSidebarForm,\n  AppSidebarHeader,\n  AppSidebarMinimizer,\n  AppSidebarNav2 as AppSidebarNav,\n} from \"@coreui/react\";\n// routes config\nimport routes from \"../../routes\";\n\n// const DefaultHeader = React.lazy(() => import(\"./DefaultHeader\"));\nconst DefaultAside = React.lazy(() => import(\"./DefaultAside\"));\nconst DefaultFooter = React.lazy(() => import(\"./DefaultFooter\"));\n\nconst nav = {\n  items: [\n    {\n      title: true,\n      name: 'Idaho Surf Report',\n      wrapper: {            // optional wrapper object\n        element: '',        // required valid HTML5 element tag\n        attributes: {}        // optional valid JS object with JS API naming ex: { className: \"my-class\", style: { fontFamily: \"Verdana\" }, id: \"my-id\"}\n      },\n      class: ''             // optional class names space delimited list for title item ex: \"text-center\"\n    },\n    {\n      name: \"Home\",\n      url: \"/\",\n      icon: \"icon-home\",\n    },\n    {\n      name: 'Waves',\n      icon: 'icon-chart',\n      children: [\n        {\n          name: \"Boise\",\n          url: \"/wave/13206000\",\n          icon: \"icon-globe\",\n        },\n        {\n          name: \"Cascade\",\n          url: \"/wave/13246000\",\n          icon: \"icon-globe\",\n        },\n        {\n          name: \"Lochsa\",\n          url: \"/wave/13337000\",\n          icon: \"icon-globe\",\n        },\n        {\n          name: \"Horseshoe\",\n          url: \"/wave/13247500\",\n          icon: \"icon-globe\",\n        },\n      ]\n    },\n    {\n      name: \"Search\",\n      url: \"/search/id\",\n      icon: \"icon-magnifier\",\n    },\n  ],\n};\n\nclass DefaultLayout extends Component {\n  loading = () => (\n    <div className=\"animated fadeIn pt-1 text-center\">Loading...</div>\n  );\n\n  render() {\n    return (\n      <div className=\"app\">\n        <div className=\"app-body \">\n          <AppSidebar fixed display=\"lg\">\n            <AppSidebarHeader />\n            <AppSidebarForm />\n            <Suspense>\n              <AppSidebarNav navConfig={nav} {...this.props} router={router} />\n            </Suspense>\n            <AppSidebarFooter />\n            <AppSidebarMinimizer />\n          </AppSidebar>\n          <main className=\"main mt-4\">\n            <Container fluid>\n              <Suspense fallback={this.loading()}>\n                <Switch>\n                  {routes.map((route, idx) => {\n                    return route.component ? (\n                      <Route\n                        key={idx}\n                        path={route.path}\n                        exact={route.exact}\n                        name={route.name}\n                        render={(props) => <route.component {...props} />}\n                      />\n                    ) : null;\n                  })}\n                </Switch>\n              </Suspense>\n            </Container>\n          </main>\n          <AppAside fixed>\n            <Suspense fallback={this.loading()}>\n              <DefaultAside />\n            </Suspense>\n          </AppAside>\n        </div>\n        <AppFooter>\n          <Suspense fallback={this.loading()}>\n            <DefaultFooter />\n          </Suspense>\n        </AppFooter>\n      </div>\n    );\n  }\n}\n\nexport default DefaultLayout;\n"],"sourceRoot":""}