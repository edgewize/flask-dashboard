{"version":3,"sources":["utils.js","components/Loader.js","views/Wave/LineChart.js","views/Wave/WaveSummary.js","views/Dashboard/SummaryGallery.js","views/Dashboard/Dashboard.js"],"names":["buildApiUrl","url","Loader","this","props","isLoading","Fragment","children","Component","LineChart","timeSeries","data","discharge","labels","date","cfs","push","mainChart","datasets","label","backgroundColor","borderColor","mainChartOpts","tooltips","enabled","custom","CustomTooltips","maintainAspectRatio","elements","line","borderWidth","point","radius","hitRadius","hoverRadius","className","style","height","options","WaveSummary","state","query","period","freq","site_id","fetch_path","fetch","then","res","json","result","setState","getFlowData","prevProps","prevState","site_name","meta","Object","keys","siteName","TypeError","Card","CardBody","to","SummaryGallery","Row","map","Col","md","key","Dashboard","href"],"mappings":"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","file":"static/js/7.317d595f.chunk.js","sourcesContent":["export const buildApiUrl = (url) => {\n  let api_target =\n    process.env.NODE_ENV === \"development\" ? \"http://127.0.0.1:9999\" : \"\";\n  return api_target + url;\n};\n\nexport function range(start, end) {\n  var ans = [];\n  for (let i = start; i <= end; i++) {\n    ans.push(i);\n  }\n  return ans;\n}\n","import React, { Component } from \"react\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass Loader extends Component {\n  render() {\n      if (this.props.isLoading) {\n        return (<div>Loading...</div>)\n      } else {\n        return (<React.Fragment>{this.props.children}</React.Fragment>)\n      }\n  }\n}\n\nexport default Loader;\n","import React, { Component } from \"react\";\nimport { Line } from \"react-chartjs-2\";\nimport { CustomTooltips } from \"@coreui/coreui-plugin-chartjs-custom-tooltips\";\n\nclass LineChart extends Component {\n  render() {\n\n    let timeSeries = this.props.data.timeSeries.discharge;\n\n    let labels = [];\n    let data = [];\n\n    for (var date in timeSeries) {\n      let cfs = timeSeries[date]; \n      data.push(cfs);\n      labels.push(date);\n    };\n\n    let dset = {\n      label: \"Cubic Feet Per Second\",\n      backgroundColor: \"transparent\",\n      borderColor: \"blue\",\n      data: data\n    };\n\n    let mainChart = {\n      labels: labels,\n      datasets: [dset]\n    };\n\n    const mainChartOpts = {\n      tooltips: {\n        enabled: false,\n        custom: CustomTooltips\n      },\n      maintainAspectRatio: false,\n      elements: {\n        line: {\n          borderWidth: 3\n        },\n        point: {\n          radius: 4,\n          hitRadius: 10,\n          hoverRadius: 4\n        }\n      }\n    };\n    return (\n      <div\n        className=\"chart-wrapper\"\n        style={{ height: this.props.height + \"px\"}}\n      >\n        <Line data={mainChart} options={mainChartOpts} height={this.props.height} />\n      </div>\n    );\n  }\n}\n\nexport default LineChart;\n","import React, { Component } from \"react\";\nimport { Card, CardBody } from \"reactstrap\";\nimport { buildApiUrl } from \"../../utils\";\nimport LineChart from \"./LineChart\";\nimport Loader from \"../../components/Loader\";\nimport { Link } from \"react-router-dom\";\n\nclass WaveSummary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true,\n      query: {\n        period: \"P7D\",\n        freq: \"D\"\n      },\n      data: null,\n    };\n  }\n\n  getFlowData() {\n    let site_id = this.props.site_id;\n    let fetch_path =\n      buildApiUrl(\"/api/flow/\" + site_id) +\n      \"?period=\" +\n      this.state.query.period +\n      \"&freq=\" +\n      this.state.query.freq;\n    fetch(fetch_path)\n      .then((res) => res.json())\n      .then((result) => {\n        this.setState({\n          isLoading: false,\n          data: result,\n        });\n      });\n  }\n\n  componentDidMount() {\n    this.getFlowData();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.query !== this.state.query) {\n      this.getFlowData();\n    }\n  }\n\n  render() {\n    let site_name = null;\n    try {\n      let meta = this.state.data.meta;\n      site_name = meta[Object.keys(meta)[0]].siteName;\n    } catch (TypeError) {\n      site_name = null;\n    }\n    return (\n      <Card>\n        <Loader isLoading={this.state.isLoading}>\n          {!this.state.isLoading && (\n            <React.Fragment>\n              <CardBody>\n                <Link to={\"/wave/\" + this.props.site_id}>\n                <h5>{site_name}</h5>\n                </Link>\n                <div>\n                  {this.state.data && (\n                    <LineChart data={this.state.data} height={200} />\n                  )}\n                </div>\n                <label className={\"text-center d-block mt-2 mb-0\"}>\n                  <Link to={\"/wave/\" + this.props.site_id}>More...</Link>\n                </label>\n              </CardBody>\n            </React.Fragment>\n          )}\n        </Loader>\n      </Card>\n    );\n  }\n}\n\nexport default WaveSummary;\n","import React, { Component } from \"react\";\nimport { Row, Col } from \"reactstrap\";\nimport WaveSummary from \"../Wave/WaveSummary\";\n\nclass SummaryGallery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [13206000, 13247500, 13337000, 13246000],\n    };\n  }\n  render() {\n    return (\n      <Row>\n        {this.state.data.map((site_id) => (\n          <Col md=\"6\">\n            <WaveSummary key={site_id} site_id={site_id} />\n          </Col>\n        ))}\n      </Row>\n    );\n  }\n}\n\nexport default SummaryGallery;\n","import React, { Component } from \"react\";\nimport { Col, Row, Card, CardBody } from \"reactstrap\";\nimport SummaryGallery from \"./SummaryGallery\";\n\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div className=\"animated fadeIn\">\n        <Row>\n          <Col>\n            <Card>\n              <CardBody>\n                <h1>Idaho Surf Report</h1>\n                <p>\n                  Track river flow trends for Idaho surf waves. Project made\n                  possible by information from the{\" \"}\n                  <a href=\"https://waterdata.usgs.gov/nwis\">\n                    US Geological survey\n                  </a>{\" \"}\n                  and <a href=\"http://riverbreak.com/\">Riverbreak Magazine</a>\n                </p>\n              </CardBody>\n            </Card>\n          </Col>\n        </Row>\n        <SummaryGallery />\n      </div>\n    );\n  }\n}\n\nexport default Dashboard;\n"],"sourceRoot":""}